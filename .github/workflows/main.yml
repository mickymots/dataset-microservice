# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains 2 jobs called "build" and "setup-gcloud-sdk"
#   build:
#     # The type of runner that the job will run on
#     runs-on: ubuntu-latest

#     # Steps represent a sequence of tasks that will be executed as part of the job
#     steps:
#       # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#       - uses: actions/checkout@v2

#       # Runs a single command using the runners shell
#       - name: Run a one-line script
#         run: echo Hello, world!


#       - name: Build container image
#         uses: docker/build-push-action@v1
#         with:
#           username: ${{ github.actor }}
#           password: ${{ secrets.GITHUB_TOKEN }}
#           registry: docker.pkg.github.com
#           repository: ${{ github.repository }}/dataset-microservice-image
#           tag_with_sha: true
#           tag_with_ref: true
  

         
  
  deploy-to-gke:
    runs-on: ubuntu-latest
#     needs: [setup-gcloud-sdk]
    steps:
      
        - name: Set up Cloud SDK
          uses: google-github-actions/setup-gcloud@master
          with:
            project_id: ${{ secrets.GCP_PROJECT_ID }}
            service_account_key: ${{ secrets.GCP_SA_KEY }}
            export_default_credentials: true    
      
        - id: get-credentials
          uses: google-github-actions/get-gke-credentials@main
          with:
            cluster_name: dataset-cluster
            location: us-central1-c
            
          
        - name: deploy to dev cluster
          run : kubectl create deployment hello-app --image=gcr.io/google-samples/hello-app:2.0 

        - name: expose service
          run : kubectl expose deployment hello-app --type=LoadBalancer --port 8080
    
