# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  # This workflow contains 2 jobs called "build" and "setup-gcloud-sdk"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    
      - name: Check Out Repo 
        uses: actions/checkout@v2
      
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # Create Docker META
      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: ${{ github.repository }}/dataset-microservice-image # list of Docker images to use as base name for tags
          tag-semver: |
            {{version}}
            {{major}}.{{minor}}            
          tag-sha: true 

      # Login to Github container Registry
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1 
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}


  deploy-to-gke:
    environment: dev
    runs-on: ubuntu-latest
    needs: [build]
    if: ${{ github.event_name != 'pull_request' }}
    steps:
      - uses: actions/checkout@v2
      
      # setup GCloud SDK
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true    

      # Setup GKE 
      - id: get-credentials
        uses: google-github-actions/get-gke-credentials@main
        with:
          cluster_name: dataset-cluster
          location: us-central1-c

      # Apply the deployment kubectl
      - name: deploy to dev cluster
        run : kubectl apply -f deployments/
      
     

